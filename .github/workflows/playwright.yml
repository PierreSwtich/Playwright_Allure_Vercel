name: Playwright Tests
on:
  push:
    branches: [ main, master ]
    schedule:
    - cron: '0 0 */1 * *'

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
    - name: Run Playwright tests
      run: npx playwright test
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Get Allure history
      uses: actions/checkout@v3
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Allure Report action from marketplace
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: build/allure-results
        gh_pages: gh-pages
        allure_report: allure-report
        allure_history: allure-history
        keep_reports: 20
        
    - name: Deploy allure report to vercel branch
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: vercel-allure
        FOLDER: allure-report
        CLEAR_GLOBS_FILE: ".globfile"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    # - name: Trigger deployment workflow
    #   run: |
    #     curl -X POST https://api.github.com/repos/PierreSwtich/Playwright_Allure_Vercel/dispatches -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H 'Content-Type: application/json' -d '{"event_type": "deploy-vercel"}'

    # - uses: convictional/trigger-workflow-and-wait@v1.6.1
    #   with:
    #     owner: PierreSwtich
    #     repo: Playwright_Allure_Vercel
    #     github_token: ${{ secrets.MY_TOKEN }}
    #     github_user: github-user
    #     workflow_file_name: playwright.yml
    #     ref: vercel-allure
    #     wait_interval: 10
    #     client_payload: '{}'
    #     propagate_failure: false
    #     trigger_workflow: true
    #     wait_workflow: true
